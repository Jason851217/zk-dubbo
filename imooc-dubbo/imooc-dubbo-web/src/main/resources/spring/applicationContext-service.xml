<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
		
	<!-- 扫描包加载Service实现类 -->
	<context:component-scan base-package="com.imooc.web.service"></context:component-scan>
	<!-- 属性文件不能跨容器，要在controller中也能被访问到，也需要配置 -->
	<context:property-placeholder location="classpath:resource/*.properties" />
	<!-- 自动创建代理 对@AspectJ注解的支持 -->
	<!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Service --> 
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<!-- 重连策略 -->
	<bean id="retryPolicy" class="org.apache.curator.retry.ExponentialBackoffRetry">
		<!-- 间隔时间基数 -->
		<constructor-arg index="0" value="1000" />
		<!-- 重连策略 -->
		<constructor-arg index="1" value="3" />
	</bean>

	<bean id="curatorFramework" class="org.apache.curator.framework.CuratorFrameworkFactory" factory-method="newClient" init-method="start">
		<constructor-arg index="0" value="${zk.address}" />
		<!-- sessionTimeoutMs会话超时时间，单位为毫秒。默认是60000ms  -->
		<constructor-arg index="1" value="5000" />
		<!-- connectionTimeoutMs连接创建超时时间，单位毫秒，默认15000ms -->
		<constructor-arg index="2" value="3000" />
		<constructor-arg index="3" ref="retryPolicy" />
	</bean>

	<!--curator应用场景一：查看当前Client是不是主机-->
	<!--<bean id="adShowLeader" class="com.chinaso.common.zookeeper.leader.LeaderDispatch" scope="singleton" init-method="init">-->
	<!--<constructor-arg index="0" ref="curatorFramework" />-->
	<!--<constructor-arg index="1" value="${sas.zookeeper.leader}" />-->
	<!--</bean>-->
	<!--curator应用场景二：监控并同步所有Client的数据-->
	<!--<bean id="publishAdFlush" class="com.chinaso.modules.ad.job.PublishAdFlush" scope="singleton" init-method="init">-->
	<!--<constructor-arg index="0" ref="curatorFramework" />-->
	<!--<constructor-arg index="1" value="${sas.zookeeper.publish}" />-->
	<!--</bean>-->
</beans>
